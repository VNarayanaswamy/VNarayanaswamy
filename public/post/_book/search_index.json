[
["overview.html", "Building a Bodyweight Tracker 1 Overview:", " Building a Bodyweight Tracker Vignesh Narayanaswamy 2018-12-31 1 Overview: This project is designed to help users track their bodyweight via a google sheet and build an app using Shiny that updates in real time and visualizes weightloss progress. Checkout Part 2 of this project which includes a predictive model to help users identify target caloric intake during dieting, maintenance, and massing phases. "],
["steps.html", "2 Steps", " 2 Steps Create a google sheet Name sheet “Bodyweight Tracker” Create Shiny App "],
["shiny-app-code.html", "3 Shiny App Code", " 3 Shiny App Code Load the necessary R Packages: # Define list of required packages packages&lt;-c(&quot;shiny&quot;, &quot;googlesheets&quot;,&quot;DT&quot;,&quot;ggplot2&quot;,&quot;ggplot2&quot;, &quot;dplyr&quot;) #logical vector that lists which packages are already installed packages_checked&lt;-(packages %in% installed.packages()[,1]) #list of packages that are not installed packages_required &lt;- packages[!packages_checked] #install packages that are required if (sum(!(packages_checked))&gt;0) { install.packages(packages_required) } #load packages &quot;getSymbols.warning4.0&quot;=FALSE lapply(packages, require, character.only= TRUE) rm(packages,packages_checked, packages_required) Create Google Sheet object: bodyweight_sheet &lt;- gs_url(&quot;https://docs.google.com/spreadsheets/d/YOURAPIKEY/edit?usp=sharing&quot;) bodyweight_table &lt;- gs_read(bodyweight_sheet) Define Server Logic: server&lt;- (function(input, output, session) { #Table of raw data output$the_data &lt;- renderDataTable({ datatable(bodyweight_table) }) #Time series plot of bodyweight output$the_graph &lt;- renderPlot({ ggplot(data = bodyweight_table, aes(x = as.Date(bodyweight_table$Date, &quot;%m/%d/%Y&quot;), y = bodyweight_table$Bodyweight)) + geom_point(color=&quot;red&quot;)+ geom_line()+ stat_smooth(method=&quot;auto&quot;)+ labs(x = &quot;Date&quot;, y=&quot;Bodyweight (lbs)&quot;) }) #Time series plot of weekly bodyweight rate of change output$weekly_loss &lt;- renderPlot({ ggplot(data = bodyweight_table, aes(x = as.Date(bodyweight_table$Date, &quot;%m/%d/%Y&quot;), y = bodyweight_table$Weekly_Rate)) + geom_point(color=&quot;red&quot;)+ geom_line()+ geom_hline(yintercept=-.02, linetype=&quot;dashed&quot;, color = &quot;red&quot;, size=2)+ geom_hline(yintercept=-.01, linetype=&quot;dashed&quot;, color = &quot;red&quot;, size=2)+ stat_smooth(method=&quot;auto&quot;)+ labs(x = &quot;Date&quot;, y=&quot;Percent Bodyweight Change Per Week&quot;) }) #Tooltip functionality output$info &lt;- renderText({ paste0(&quot;x=&quot;, input$plot_click$x, &quot;\\ny=&quot;, input$plot_click$y) }) }) "],
["define-ui-layout.html", "4 Define UI Layout:", " 4 Define UI Layout: ui&lt;-( fluidPage( titlePanel(&quot;Bodyweight Tracker&quot;), sidebarLayout( sidebarPanel( tags$a(href=&quot;Hyperlink to your Google Sheet&quot;, &quot;Click for raw data&quot;) ), mainPanel( tabsetPanel(type = &quot;tabs&quot;, tabPanel(&quot;Daily Bodyweight&quot;, plotOutput(&quot;the_graph&quot;, click = &quot;plot_click&quot;),verbatimTextOutput(&quot;info&quot;)), tabPanel(&quot;Weekly Change&quot;, plotOutput(&quot;weekly_loss&quot;)), tabPanel(&quot;Raw Data&quot;, dataTableOutput(&quot;the_data&quot;)) ) ) ) )) # Run the application shinyApp(ui = ui, server = server) Check out Part 1 of this series, which details how to build a Shiny app and simple repository using google sheets to visualize bodyweight data realtime. "],
["overview-1.html", "5 Overview", " 5 Overview Research suggests a weight loss rate of 1-2% of bodyweight is the maximum amount of weightloss suggested for sustainable weightloss. "]
]
